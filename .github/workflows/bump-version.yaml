# This workflow does version management, bumping the patch version on the main branch after a PR is merged.

# Requirements:
# - It needs a GitHub secret named WORKFLOW_PAT with a personal access token that has workflow permissions. The user that owns the
#   PAT must be allowed to push to the main branch of the repo. That usually means the user has to be a repo admin, and admins must
#   be excepted from branch protection rules on main.
# - Another workflow must consume the prereleases created by this one. That workflow should build and publish the release.
# You shouldn't need to customize this workflow.

# Details:
# This workflow is triggered by merge to main, or by manual workflow_dispatch.
# 1. Remove any `-pre` or similar pre-release info from the semver. Commit, push, tag, and create a prerelease.
# 2. Bump the patch version of the semver, and add `-pre` as a pre-release identifier. Commit and push.
# It parses the version info from files in the repo like Cargo.toml, package.json, or version.sbt. It updates those files when it
# bumps the version.
# Sanity checks ensure it's a valid semver, and it's not 0.0.0.

name: Bump Version

'on':
  push:
    branches:
      # WARNING: Because this workflow pushes to main, we need more filtering in the job below to ensure we don't busy loop.
      - main
  workflow_dispatch: null

env:
  COMMIT_PREFIX: 'bump-version: '

jobs:
  # This job exists solely to export env.COMMIT_PREFIX in a way that we can use it in the "if" of the "bump" job.
  # See https://github.community/t/how-to-set-and-access-a-workflow-variable/17335/16.
  vars:
    runs-on: ubuntu-20.04
    outputs:
      commit-prefix: ${{ steps.echo.outputs.commit-prefix }}
    steps:
      - id: echo
        run: echo "::set-output name=commit-prefix::${{ env.COMMIT_PREFIX }}"

  bump:
    needs:
      - vars
    runs-on: ubuntu-20.04
    if: '!contains(join(github.event.commits.*.message), needs.vars.outputs.commit-prefix)'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.WORKFLOW_PAT }}
      - name: Configure git
        run: |
          git config --global user.email ops@ironcorelabs.com
          git config --global user.name "Leeroy Travis"
      - name: Get version
        id: versions
        run: |
          set -x
          VERSION=$(.github/bump-version.sh)
          echo "::set-output name=old::${VERSION}"
          VERSION="${VERSION/-*}"
          echo "::set-output name=release::${VERSION}"
          VERSION="$(echo "${VERSION}" | awk -F. -v OFS=. '{$NF++;print}')-pre"
          echo "::set-output name=bumped::${VERSION}"
      - name: Set release version
        run: |
          .github/bump-version.sh "${{ steps.versions.outputs.release }}"
          git diff --cached
      - name: Commit and push release tag
        run: |
          git commit -m "${COMMIT_PREFIX}Set release version ${{ steps.versions.outputs.release }}"
          git tag "${{ steps.versions.outputs.release }}"
          git push origin main "${{ steps.versions.outputs.release }}"
      - name: Create prerelease
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.WORKFLOW_PAT }}
          prerelease: true
          tag: ${{ steps.versions.outputs.release }}
      - name: Bump version and set pre-release
        run: |
          .github/bump-version.sh "${{ steps.versions.outputs.bumped }}"
          git diff --cached
      - name: Commit and push pre-release version
        run: |
          git commit -m "${COMMIT_PREFIX}Bump to next pre-release version ${{ steps.versions.outputs.bumped }}"
          git push origin main

# DO NOT EDIT THIS FILE.
# Instead, edit the jsonpatch file (actually YAML) in .github/update-workflows-patch.yaml
# For docs, see github-actions in the IronCoreLabs/depot repo.

name: Update Workflows
'on':
  push:
    paths:
    - .github/**
    branches:
    - '!main'
  schedule:
  - cron: 34 7 * * 1-5
  workflow_dispatch: null
env:
  TEMPLATE_REPO: IronCoreLabs/depot
  TEMPLATE_DIR: github-actions
  WORKFLOWS: update-workflows.yaml
jobs:
  update:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/setup-python@v2
    - name: Install JSON tools
      run: pip3 install jsonpatch json2yaml
    - name: Check out this repo
      uses: actions/checkout@v2
      with:
        path: thisrepo
        token: ${{ secrets.WORKFLOW_PAT }}
    - name: Check out template repo
      uses: actions/checkout@v2
      with:
        path: template
        repository: ${{ env.TEMPLATE_REPO }}
        token: ${{ secrets.WORKFLOW_PAT }}
    - name: Update workflows
      id: update
      run: "set -x\nset -o pipefail\nmkdir -p thisrepo/.github/workflows\nfor WF in\
        \ ${WORKFLOWS} ; do\n  echo \"Updating ${WF}...\"\n  BASE=$(basename ${WF}\
        \ .yaml)\n  YAMLPATCH=\".github/${BASE}-patch.yaml\"\n  JSONPATCH=\"/tmp/${BASE}-patch.json\"\
        \n  # Copy the workflow file, using jsonpatch.\n  (\n    echo \"# DO NOT EDIT\
        \ THIS FILE.\"\n    echo \"# Instead, edit the jsonpatch file (actually YAML)\
        \ in ${YAMLPATCH}\"\n    echo \"# For docs, see github-actions in the IronCoreLabs/depot\
        \ repo.\"\n    echo \"\"\n    if [ -f \"thisrepo/${YAMLPATCH}\" ] ; then\n\
        \      yaml2json < \"thisrepo/${YAMLPATCH}\" > \"${JSONPATCH}\"\n      yaml2json\
        \ < \"template/${TEMPLATE_DIR}/${WF}\" | jsonpatch - \"${JSONPATCH}\" | json2yaml\n\
        \    else\n      yaml2json < \"template/${TEMPLATE_DIR}/${WF}\" | json2yaml\n\
        \    fi\n  ) | tee \"thisrepo/.github/workflows/${WF}\"\n  # Copy any related\
        \ files or directories with the same name.\n  find \"template/${TEMPLATE_DIR}\"\
        \ -name \"${BASE}.*\" ! -name \"${BASE}.yaml\" -exec cp -r {} thisrepo/.github\
        \ \\;\ndone\n\ncd thisrepo\n\necho \"Git status:\"\ngit status\n\nif git status\
        \ --porcelain | grep -qE '^\\?' ; then\n  echo \"Unknown files in repo; aborting.\"\
        \n  exit 1\nfi\n\ngit add -u\n\nif [ -z \"$(git status --porcelain)\" ] ;\
        \ then\n  echo \"No updated workflows; done.\"\n  echo \"::set-output name=skip::true\"\
        \nfi\n"
    - name: Commit and PR
      working-directory: thisrepo
      if: steps.update.outputs.skip != 'true'
      run: "set -x\nset -o pipefail\ngit config --global user.email ops@ironcorelabs.com\n\
        git config --global user.name \"Leeroy Travis\"\n\n# If we're on a PR branch,\
        \ push to it instead of making a new PR branch.\nif ! [ \"${{ github.ref }}\"\
        \ = \"refs/heads/main\" ] ; then\n  git commit -m \"Update workflows from\
        \ templates.\"\n  git push\n  exit 0\nfi\n\nNEW_BRANCH=\"workflow-update-$(date\
        \ -u '+%Y-%m-%d')\"\ngit checkout -b \"${NEW_BRANCH}\"\ngit commit -m \"Update\
        \ workflows from templates.\"\ngit push -u origin \"${NEW_BRANCH}\"\n\n# Create\
        \ a PR.\ncurl -Ss -X POST \\\n  -H \"Authorization: token ${{ secrets.WORKFLOW_PAT\
        \ }}\" \\\n  -H \"Content-Type: application/json\" \\\n  --data '{\"title\"\
        : \"Update workflows from templates\",\n    \"head\": \"'${NEW_BRANCH}'\"\
        ,\n    \"base\": \"main\",\n    \"body\": \"Updating from templates.\"\n \
        \   }' \\\n  https://api.github.com/repos/${{ github.repository }}/pulls \\\
        \n  | tee pr.json\n\n# Label the PR.\nPR=$(jq -r '.issue_url' < pr.json)\n\
        curl -Ss -X POST \\\n  -H \"Authorization: token ${{ secrets.WORKFLOW_PAT\
        \ }}\" \\\n  -H \"Content-Type: application/json\" \\\n  --data '{\"labels\"\
        : [\"ops\"]}' \\\n  \"${PR}/labels\"\n"

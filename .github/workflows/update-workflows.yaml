# This workflow gets copied to .github/workflows in the target repository. From there, it updates itself and other workflows from
# templates in the template repository. The update runs once a day or on demand, and it creates a PR if there are changes to be
# applied.

# The target repo must have a WORKFLOW_PAT secret containing a GitHub personal access token with "workflow" permission.

# When you install this in a repository, please ensure there's a .github/CODEOWNERS file to give @IronCoreLabs/ops reponsibility
# for files under the .github directory.

name: Update Workflows

# "on" must be quoted, otherwise YAML will decide its tag is !!bool instead of !!str and change it to its canonical "true" form.
'on':
  push:
    paths:
    - .github/**
    branches:
    - '!main'
  schedule:
    - cron: 34 7 * * 1-5
  workflow_dispatch: null

env:
  TEMPLATE_REPO: IronCoreLabs/depot
  TEMPLATE_DIR: github-actions
  # Space-separated list of repo workflows to keep updated.
  WORKFLOWS: update-workflows.yaml

jobs:
  update:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/setup-python@v2
      - name: Install JSON tools
        run: pip3 install jsonpatch json2yaml
      - name: Check out this repo
        uses: actions/checkout@v2
        with:
          path: thisrepo
          token: ${{ secrets.WORKFLOW_PAT }}
      - name: Check out template repo
        uses: actions/checkout@v2
        with:
          path: template
          repository: ${{ env.TEMPLATE_REPO }}
          token: ${{ secrets.WORKFLOW_PAT }}
      - name: Update workflows
        id: update
        run: |
          set -x
          set -o pipefail
          mkdir -p thisrepo/.github/workflows
          for WF in ${WORKFLOWS} ; do
            echo "Updating ${WF}..."
            BASE=$(basename ${WF} .yaml)
            YAMLPATCH=".github/${BASE}-patch.yaml"
            JSONPATCH="/tmp/${BASE}-patch.json"
            # Copy the workflow file, using jsonpatch.
            (
              echo "# DO NOT EDIT THIS FILE."
              echo "# Instead, edit the jsonpatch file (actually YAML) in ${YAMLPATCH}"
              echo "# For docs, see github-actions in the IronCoreLabs/depot repo."
              echo ""
              if [ -f "thisrepo/${YAMLPATCH}" ] ; then
                yaml2json < "thisrepo/${YAMLPATCH}" > "${JSONPATCH}"
                yaml2json < "template/${TEMPLATE_DIR}/${WF}" | jsonpatch - "${JSONPATCH}" | json2yaml
              else
                yaml2json < "template/${TEMPLATE_DIR}/${WF}" | json2yaml
              fi
            ) | tee "thisrepo/.github/workflows/${WF}"
            # Copy any related files or directories with the same name.
            find "template/${TEMPLATE_DIR}" -name "${BASE}.*" ! -name "${BASE}.yaml" -exec cp -r {} thisrepo/.github \;
          done

          cd thisrepo

          echo "Git status:"
          git status

          if git status --porcelain | grep -qE '^\?' ; then
            echo "Unknown files in repo; aborting."
            exit 1
          fi

          git add -u
          
          if [ -z "$(git status --porcelain)" ] ; then
            echo "No updated workflows; done."
            echo "::set-output name=skip::true"
          fi
      - name: Commit and PR
        working-directory: thisrepo
        if: steps.update.outputs.skip != 'true'
        run: |
          set -x
          set -o pipefail
          git config --global user.email ops@ironcorelabs.com
          git config --global user.name "Leeroy Travis"

          # If we're on a PR branch, push to it instead of making a new PR branch.
          if ! [ "${{ github.ref }}" = "refs/heads/main" ] ; then
            git commit -m "Update workflows from templates."
            git push
            exit 0
          fi

          NEW_BRANCH="workflow-update-$(date -u '+%Y-%m-%d')"
          git checkout -b "${NEW_BRANCH}"
          git commit -m "Update workflows from templates."
          git push -u origin "${NEW_BRANCH}"

          # Create a PR.
          curl -Ss -X POST \
            -H "Authorization: token ${{ secrets.WORKFLOW_PAT }}" \
            -H "Content-Type: application/json" \
            --data '{"title": "Update workflows from templates",
              "head": "'${NEW_BRANCH}'",
              "base": "main",
              "body": "Updating from templates."
              }' \
            https://api.github.com/repos/${{ github.repository }}/pulls \
            | tee pr.json

          # Label the PR.
          PR=$(jq -r '.issue_url' < pr.json)
          curl -Ss -X POST \
            -H "Authorization: token ${{ secrets.WORKFLOW_PAT }}" \
            -H "Content-Type: application/json" \
            --data '{"labels": ["ops"]}' \
            "${PR}/labels"
